{"ast":null,"code":"var _jsxFileName = \"/home/orandi/Development/Code/Phase2/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AccountContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountContainer() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [formdata, setFormdata] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: 0\n  });\n  const url = \"http://localhost:8001/transactions\";\n  [search];\n\n  //fetching  the data from server\n  useEffect(() => {\n    fetch(url).then(r => r.json()).then(setTransactions);\n  }, []);\n\n  //handling  the changes  on  the  inputs\n  function handleChange(event) {\n    setFormdata({\n      ...formdata,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  //posting  the data to  the server\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(formdata);\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formdata)\n    }).then(response => response.json()).then(data => {\n      // Handling the response \n      console.log(\"POST request successful:\", data);\n      // Updating the transactions state with the new data\n      setTransactions([...transactions, data]);\n      // Reseting the form data to its initial values\n      setFormdata({\n        date: \"\",\n        description: \"\",\n        category: \"\",\n        amount: 0\n      });\n    }).catch(error => {\n      // Handle any errors that occur during the request\n      console.log(\"Error making POST request:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      handleSubmit: handleSubmit,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsList, {\n      transactions: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(AccountContainer, \"F0fS/tVftUv6y6lkTjq5FOflClI=\");\n_c = AccountContainer;\nexport default AccountContainer;\nvar _c;\n$RefreshReg$(_c, \"AccountContainer\");","map":{"version":3,"names":["React","useState","useEffect","TransactionsList","Search","AddTransactionForm","jsxDEV","_jsxDEV","AccountContainer","_s","transactions","setTransactions","formdata","setFormdata","date","description","category","amount","url","search","fetch","then","r","json","handleChange","event","target","name","value","handleSubmit","preventDefault","console","log","method","headers","body","JSON","stringify","response","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/orandi/Development/Code/Phase2/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AccountContainer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  const [transactions, setTransactions] = useState([]);\n  const [formdata, setFormdata] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: 0,\n  });\n  const url = \"http://localhost:8001/transactions\";\n\n  [search]\n\n\n  //fetching  the data from server\n  useEffect(() => {\n    fetch(url)\n      .then((r) => r.json())\n      .then(setTransactions);\n  }, []);\n\n\n//handling  the changes  on  the  inputs\n  function handleChange(event) {\n    setFormdata({\n      ...formdata,\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  //posting  the data to  the server\nconst handleSubmit = (event) => {\n  event.preventDefault();\n  console.log(formdata);\n  fetch(url, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(formdata),\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      // Handling the response \n      console.log(\"POST request successful:\", data);\n      // Updating the transactions state with the new data\n      setTransactions([...transactions, data]);\n      // Reseting the form data to its initial values\n      setFormdata({\n        date: \"\",\n        description: \"\",\n        category: \"\",\n        amount: 0,\n      });\n    })\n    .catch((error) => {\n      // Handle any errors that occur during the request\n      console.log(\"Error making POST request:\", error);\n    });\n};\n\n\n  return (\n    <div>\n      <Search />\n      <AddTransactionForm\n        handleSubmit={handleSubmit}\n        handleChange={handleChange}\n      />\n      <TransactionsList transactions={transactions} />\n    </div>\n  );\n}\n\nexport default AccountContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}