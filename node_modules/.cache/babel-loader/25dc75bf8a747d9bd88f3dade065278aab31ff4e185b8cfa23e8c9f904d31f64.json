{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import TransactionsList from \"./TransactionsList\";\n// import Search from \"./Search\";\n// import AddTransactionForm from \"./AddTransactionForm\";\n\n// function AccountContainer() {\n//   const [transactions, setTransactions] = useState([]);\n//   const [formdata, setFormdata] = useState({\n//     date: \"\",\n//     description: \"\",\n//     category: \"\",\n//     amount: 0,\n//   });\n//   const url = \"http://localhost:8001/transactions\";\n\n//   const [search, setSearch] = useState(\"\");\n\n//   const handleSearch = (searchValue) => {\n//     console.log(\"I searched\");\n//     setSearch(searchValue);\n//     const filteredTransactions = transactions.filter((transaction) =>\n//       transaction.description.toLowerCase().includes(searchValue.toLowerCase())\n//     );\n//     setTransactions(filteredTransactions);\n//   };\n\n//   //fetching  the data from server\n//   useEffect(() => {\n//     fetch(url)\n//       .then((r) => r.json())\n//       .then(setTransactions);\n//   }, []);\n\n//   //handling  the changes  on  the  inputs\n//   function handleChange(event) {\n//     setFormdata({\n//       ...formdata,\n//       [event.target.name]: event.target.value,\n//     });\n//   }\n\n//   //posting  the data to  the server\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     console.log(formdata);\n//     fetch(url, {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(formdata),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         // Handling the response\n//         console.log(\"POST request successful:\", data);\n//         // Updating the transactions state with the new data\n//         setTransactions([...transactions, data]);\n//         // Reseting the form data to its initial values\n//         setFormdata({\n//           date: \"\",\n//           description: \"\",\n//           category: \"\",\n//           amount: 0,\n//         });\n//       })\n//       .catch((error) => {\n//         // Handle any errors that occur during the request\n//         console.log(\"Error making POST request:\", error);\n//       });\n//   };\n\n//   return (\n//     <div>\n//       <Search handleSearch={handleSearch} search={search} />\n//       <AddTransactionForm\n//         handleSubmit={handleSubmit}\n//         handleChange={handleChange}\n//       />\n//       <TransactionsList transactions={transactions} />\n//     </div>\n//   );\n// }\n\n// export default AccountContainer;","map":{"version":3,"names":[],"sources":["/home/orandi/Development/Code/Phase2/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AccountContainer.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import TransactionsList from \"./TransactionsList\";\n// import Search from \"./Search\";\n// import AddTransactionForm from \"./AddTransactionForm\";\n\n// function AccountContainer() {\n//   const [transactions, setTransactions] = useState([]);\n//   const [formdata, setFormdata] = useState({\n//     date: \"\",\n//     description: \"\",\n//     category: \"\",\n//     amount: 0,\n//   });\n//   const url = \"http://localhost:8001/transactions\";\n\n//   const [search, setSearch] = useState(\"\");\n\n//   const handleSearch = (searchValue) => {\n//     console.log(\"I searched\");\n//     setSearch(searchValue);\n//     const filteredTransactions = transactions.filter((transaction) =>\n//       transaction.description.toLowerCase().includes(searchValue.toLowerCase())\n//     );\n//     setTransactions(filteredTransactions);\n//   };\n\n//   //fetching  the data from server\n//   useEffect(() => {\n//     fetch(url)\n//       .then((r) => r.json())\n//       .then(setTransactions);\n//   }, []);\n\n//   //handling  the changes  on  the  inputs\n//   function handleChange(event) {\n//     setFormdata({\n//       ...formdata,\n//       [event.target.name]: event.target.value,\n//     });\n//   }\n\n//   //posting  the data to  the server\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     console.log(formdata);\n//     fetch(url, {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(formdata),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         // Handling the response\n//         console.log(\"POST request successful:\", data);\n//         // Updating the transactions state with the new data\n//         setTransactions([...transactions, data]);\n//         // Reseting the form data to its initial values\n//         setFormdata({\n//           date: \"\",\n//           description: \"\",\n//           category: \"\",\n//           amount: 0,\n//         });\n//       })\n//       .catch((error) => {\n//         // Handle any errors that occur during the request\n//         console.log(\"Error making POST request:\", error);\n//       });\n//   };\n\n//   return (\n//     <div>\n//       <Search handleSearch={handleSearch} search={search} />\n//       <AddTransactionForm\n//         handleSubmit={handleSubmit}\n//         handleChange={handleChange}\n//       />\n//       <TransactionsList transactions={transactions} />\n//     </div>\n//   );\n// }\n\n// export default AccountContainer;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}